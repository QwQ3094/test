name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '.idea/**'
      - '!.github/workflows/CI.yml'

jobs:
  update_version:
    name: Read and update version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

  android:
    name: Build CI (Android)
    needs: update_version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java Environment
        uses: actions/setup-java@v3
        with:
            distribution: "zulu"
            java-version: "17"
            token: ${{ secrets.GIT_TOKEN }}

      - name: Cache Flutter SDK
        uses: actions/cache@v3
        id: cache-flutter-sdk
        with:
          path: /root/flutter-sdk
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}-v3
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Install Flutter SDK
        if: steps.cache-flutter-sdk.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2
        with:
            flutter-version: 3.19.0
            channel: any

      - name: Cache Android SDK
        uses: actions/cache@v3
        id: cache-android-sdk
        with:
          path: ~/.android
          key: ${{ runner.os }}-android-sdk
          restore-keys: |
            ${{ runner.os }}-android-sdk

      - name: Download Project Dependencies
        run: flutter pub get

      - name: Decode and Generate JKS
        run: echo $KEYSTORE_BASE64 | base64 -di > android/app/vvex.jks
        env:
            KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Build APK
        run: flutter build apk --debug --target-platform android-arm64
        env:
            KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
            KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
            KEY_PASSWORD: ${{ secrets.KEY_PASSWORD}}

      - name: Rename APK
        run: |
          for file in build/app/outputs/flutter-apk/app.apk; do
            if [[ $file =~ app-(.?*)debug.apk ]]; then
              new_file_name="build/app/outputs/flutter-apk/Test.apk"
              mv "$file" "$new_file_name"
            fi
          done

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: Test-CI
          path: build/app/outputs/flutter-apk/Test.apk
